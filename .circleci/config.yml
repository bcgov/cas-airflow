version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.11.0

jobs:
  build_cache_and_push:
    executor: gcp-gcr/default
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      dockerfile_directory:
        type: string
        default: "cas-airflow"
      cache_version:
        type: integer
        default: 2
      should_push:
        type: boolean
        default: true
    working_directory: ~/<< parameters.dockerfile_directory >>
    steps:
      - checkout:
          path: ~/cas-airflow # checkout path defaults to working directory
      - gcp-gcr/gcr-auth
      - restore_cache:
          keys:
            - v<< parameters.cache_version>>-<< parameters.image_name >>-{{ .Branch }}
          paths:
            - /tmp/<< parameters.image_name >>.tar
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /tmp/<< parameters.image_name >>.tar | true
      - run:
          name: Log in to DockerHub
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USER --password-stdin registry.hub.docker.com
      - when:
          condition: << parameters.should_push >>
          steps:
            - run:
                name: Build application Docker image
                command: |
                  docker build --cache-from=<< parameters.image_name >> -t << parameters.image_name >>:latest -t gcr.io/${GOOGLE_PROJECT_ID}/<< parameters.image_name >>:<< parameters.image_tag >> .
      - when:
          condition:
            not: << parameters.should_push >>
          steps:
            - run:
                name: Build application test docker image
                command: |
                  docker build --cache-from=<< parameters.image_name >> -t << parameters.image_name >>:latest .
      - run:
          name: Save Docker image layer cache
          command: |
            docker save -o /tmp/<< parameters.image_name >>.tar << parameters.image_name >>:latest
      - save_cache:
          key: v<< parameters.cache_version>>-<< parameters.image_name >>-{{ .Branch }}-{{ epoch }}
          paths:
            - /tmp/<< parameters.image_name >>.tar
      - when:
          condition:
            equal: [true, << parameters.should_push >>]
          steps:
            - gcp-gcr/push-image:
                image: << parameters.image_name >>
                tag: << parameters.image_tag >>
                digest-path: /tmp/digest.txt
            - run:
                command: |
                  echo "Digest is: $(</tmp/digest.txt)"

workflows:
  cas-airflow:
    jobs:
      - build_cache_and_push:
          name: airflow__tag_build_and_push
          image_name: cas-airflow
          image_tag: ${CIRCLE_TAG/cas-airflow-/}
          dockerfile_directory: cas-airflow
          context: cas-pipeline
          filters:
            tags:
              only: /^cas-airflow-.*/
            branches:
              ignore: /.*/
      - build_cache_and_push:
          name: airflow_dag_trigger__tag_build_and_push
          image_name: cas-airflow-dag-trigger
          image_tag: ${CIRCLE_TAG/cas-airflow-dag-trigger-/}
          dockerfile_directory: cas-airflow/dag-trigger
          context: cas-pipeline
          filters:
            tags:
              only: /^cas-airflow-dag-trigger-.*/ # tags generated by the chart releaser
            branches:
              ignore: /.*/
