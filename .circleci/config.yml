version: 2.1

jobs:
  build_docker_image:
    parameters:
      image_name:
        type: string
      cache_version:
        type: integer
        default: 1
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/cas-airflow/docker/<< parameters.image_name >>
    steps:
      - checkout:
          path: ~/cas-airflow
      - setup_remote_docker
      - run:
          name: Install docker compose
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0
      - restore_cache:
          keys:
            - v<< parameters.cache_version>>-<< parameters.image_name >>-{{ .Branch }}
          paths:
            - /caches/<< parameters.image_name >>.tar
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /caches/<< parameters.image_name >>.tar | true
      - run:
          name: Build image
          command: |
            docker build --cache-from=<< parameters.image_name >> -t << parameters.image_name >> .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/<< parameters.image_name >>.tar << parameters.image_name >>
      - save_cache:
          key: v<< parameters.cache_version>>-<< parameters.image_name >>-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/<< parameters.image_name >>.tar
      - persist_to_workspace:
          root: ~/
          paths:
            - cas-airflow/docker/stream-minio

  test_stream_minio:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Test Docker image
          environment:
            DEPTH: 2
            WEBSITE: https://nodejs.org/dist/
            FILTER: \.png|\.svg
          command: |
            CONTEXT="--env DEPTH=$DEPTH --env WEBSITE=$WEBSITE --env FILTER=$FILTER --env MINIO_HOST=$MINIO_HOST --env MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY --env MINIO_SECRET_KEY=$MINIO_SECRET_KEY"
            CONTAINER_ID=$(docker run -itd $CONTEXT stream-minio /bin/bash)
            docker exec -it $CONTAINER_ID ./test.sh veryuniquebucket$CIRCLE_WORKFLOW_ID
          working_directory: ~/cas-airflow/docker/stream-minio

  deploy_docker_image:
    parameters:
      image_name:
        type: string
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
          at: ~/
      - deploy:
          name: Push application Docker image
          command: |
            docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            TARGET="docker.pkg.github.com/bcgov/cas-airflow/<< parameters.image_name >>:${CIRCLE_SHA1}"
            docker tag << parameters.image_name >> "$TARGET"
            docker push "$TARGET"
          working_directory: ~/cas-airflow/docker/<< parameters.image_name >>


workflows:
  version: 2
  cas-airflow:
    jobs:
      - build_docker_image:
          image_name: cas-airflow
      - deploy_docker_image:
          image_name: cas-airflow
          requires:
            - build_docker_image
          filters:
            branches:
              only:
                - develop
                - master
  stream-minio:
    jobs:
      - build_docker_image:
          image_name: stream-minio
      - test_stream_minio:
          requires:
            - build_docker_image
      - deploy_docker_image:
          image_name: stream-minio
          requires:
            - test_stream_minio
          filters:
            branches:
              only:
                - develop
                - master

  extract-zips-to-ggircs:
    jobs:
      - build_docker_image:
          image_name: extract-zips-to-ggircs
      - deploy_docker_image:
          image_name: extract-zips-to-ggircs
          requires:
            - build_docker_image
          filters:
            branches:
              only:
                - develop
                - master
