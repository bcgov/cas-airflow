route:
  clusterDomain: apps.silver.devops.gov.bc.ca

gcpLogsUpload:
  enable: true
  bucketSuffix: airflow-logs
  image:
    casShelf:
      repository: gcr.io/ggl-cas-storage/cas-shelf-tfe-add-app
      pullPolicy: Always
      tag: "0.1"

dynamicDagStorage:
  pvcName: cas-airflow-dynamic-dags
  accessMode: ReadWriteMany
  size: 1Gi
  storageClassName: netapp-file-standard

# The values we need to override from the airflow defaults
airflow:
  uid: 1002490000
  gid: 1002490000
  executor: KubernetesExecutor

  defaultAirflowRepository: gcr.io/ggl-cas-storage/cas-airflow
  defaultAirflowTag: "to_override"

  # Enable RBAC (default on most clusters these days)
  rbacEnabled: true

  # Environment variables for all airflow containers
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /gcs/credentials.json

  # Images
  images:
    airflow:
      pullPolicy: Always
    pod_template:
      pullPolicy: Always

  # Secrets for all airflow containers
  secret:
    - envName: PGPASS
      secretName: cas-airflow-patroni
      secretKey: password-superuser
    - envName: DEFAULT_USER_PASS
      secretName: airflow-default-user-password
      secretKey: default-user-pass
    - envName: AIRFLOW_NAMESPACE
      secretName: cas-namespaces
      secretKey: airflow-namespace
    - envName: GGIRCS_NAMESPACE
      secretName: cas-namespaces
      secretKey: ggircs-namespace
    - envName: CIIP_NAMESPACE
      secretName: cas-namespaces
      secretKey: ciip-namespace

  # Airflow database config
  data:
    metadataSecretName: cas-airflow-metadata
    resultBackendSecretName: cas-airflow-metadata

    metadataConnection:
      user: postgres
      pass: $PGPASS
      host: ~
      port: 5432
      db: postgres
      sslmode: disable
    resultBackendConnection:
      user: postgres
      pass: $PGPASS
      host: cas-airflow-patroni
      port: 5432
      db: postgres
      sslmode: disable
      protocol: postgresql

  # Airflow webserver settings
  webserver:
    replicas: 2
    resources:
      requests:
        cpu: 50m
      limits:
        cpu: 500m
    defaultUser:
      enabled: true
      role: Admin
      username: cas-airflow-admin
      email: admin@example.com
      firstName: admin
      lastName: user
      password: "$(DEFAULT_USER_PASS)"

  # Airflow scheduler settings
  scheduler:
    resources:
      limits:
        cpu: 1000m

  postgresql:
    enabled: false

  config:
    core:
      dag_concurrency: 1
    logging:
      # The log level should not be decreased to INFO/DEBUG,
      # or only temporarily, as the airflow sheduler is very verbose,
      # putting a strain on the shared logging system
      # with WARN, the webserver currently prints a large json schema
      logging_level: ERROR
      remote_logging: True
      remote_base_log_folder: ~
      remote_log_conn_id: gcs_logs
    api:
      auth_backend: airflow.api.auth.backend.basic_auth
    webserver:
      username: "cas-airflow-admin"
      password: "$(DEFAULT_USER_PASS)"
      web_server_worker_timeout: 300

    smtp:
      smtp_host: apps.smtp.gov.bc.ca
      smtp_starttls: false
      smtp_mail_from: cas-airflow@gov.bc.ca

    celery:
      default_queue: celery

    scheduler:
      min_file_process_interval: 30

    kubernetes:
      run_as_user: "{{ .Values.uid }}"
      delete_worker_pods: "True"

  # Git sync
  dags:
    persistence:
      enabled: false
    gitSync:
      enabled: false

  statsd:
    enabled: false
# Configuration for cas-postgres subchart
cas-postgres:
  patroni:
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 50m
        memory: 600Mi
    persistentVolume:
      size: 10Gi
      storageClass: netapp-block-standard
    replicaCount: 3
    env:
      ALLOW_NOSSL: true
      USE_WALG_BACKUP: "true"
      USE_WALG_RESTORE: "true"
    walE:
      enable: true
      gcsBucket: ~
      # kubernetesSecret should be gcp-{{ namespace }}-{{ gcs.bucketSuffix }}-service-account-key
      kubernetesSecret: ~
    # options below are required if walE.enable is true
  namespace: ~
  gcs:
    bucketSuffix: ~
